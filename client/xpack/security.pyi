# Stubs for elasticsearch.client.xpack.security (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from elasticsearch.client.utils import NamespacedClient
from typing import Any, Optional

class SecurityClient(NamespacedClient):
    def delete_user(self, username: Any, params: Optional[Any] = ...): ...
    def get_user(self, username: Optional[Any] = ..., params: Optional[Any] = ...): ...
    def put_role(self, name: Any, body: Any, params: Optional[Any] = ...): ...
    def authenticate(self, params: Optional[Any] = ...): ...
    def put_user(self, username: Any, body: Any, params: Optional[Any] = ...): ...
    def clear_cached_realms(self, realms: Any, params: Optional[Any] = ...): ...
    def change_password(self, body: Any, username: Optional[Any] = ..., params: Optional[Any] = ...): ...
    def get_role(self, name: Optional[Any] = ..., params: Optional[Any] = ...): ...
    def clear_cached_roles(self, name: Any, params: Optional[Any] = ...): ...
    def delete_role(self, name: Any, params: Optional[Any] = ...): ...
    def delete_role_mapping(self, name: Any, params: Optional[Any] = ...): ...
    def disable_user(self, username: Optional[Any] = ..., params: Optional[Any] = ...): ...
    def enable_user(self, username: Optional[Any] = ..., params: Optional[Any] = ...): ...
    def get_role_mapping(self, name: Optional[Any] = ..., params: Optional[Any] = ...): ...
    def get_token(self, body: Any, params: Optional[Any] = ...): ...
    def invalidate_token(self, body: Any, params: Optional[Any] = ...): ...
    def put_role_mapping(self, name: Any, body: Any, params: Optional[Any] = ...): ...
